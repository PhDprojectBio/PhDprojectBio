#III. Assigning new fields

#Ocean provinces are assigned and correspondence with contours is writen in the field matchContours.

rm(i,x,a, mn, mx,setone,settwo,y)
for (i in 1:length(names)){
  
  mn <- 0
  mx <- 500
  
  while (mn < 6000){
    
    if (nrow(get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)))) > 0){ 
    
      setone <- get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_adddepth")))
    
    #Assigning new fields
    
    if(nrow(setone) > 0){
      setone$matchContour <- "pendmatch" #to see if there is any without classification afterwards
      
      if (i < 13){
        
        #setting the oceanic province
        setone$oProvince <- "epipelagic and mesopelagic"
        
        if (mn == 0){
          setone$matchContour <- "match"
          
          for(a in 1:nrow(setone)){
            if(setone$depth[a] >= 500){
              setone$matchContour[a] <- "diffmatch"
            }
          }
        }
        
        #merging into one datatable with the new field contours
        
        if (mn > 0){
          setone$matchContour <- "probPlanktonShallowset"
        }
      }
      
      if(i > 12){
        
        #setting the oceanic province
        if(mn == 0){setone$oProvince <- "epipelagic and mesopelagic"}
        if(mn == 500){setone$oProvince <- "mesopelagic"}
        if(mn >= 1000 & mn < 4000){setone$oProvince <- "bathypelagic"}
        if(mn >= 4000){setone$oProvince <- "abyssopelagic"}
        
        if (mn == 0){
          setone$matchContour <- "shallowfromDeepset"
        }
        
        #merging into one datatable with the new field contours
        
        if (mn > 0){
          setone$matchContour <- "match"
          
          for(a in 1:nrow(setone)){
            if(setone$depth[a] >= 0 & setone$depth[a] < setone$minContour[a]){
              setone$matchContour[a] <- "probPlanktonDeepset"
            }
            if(setone$depth[a] >= setone$maxContour[a]){
              setone$matchContour[a] <- "diffmatch"
            }
          }
        }
      } 
      #rm(a)
    }
    
    if(mn == 0){
      settwo <- setone
    }
    
    if(mn > 0){
      settwo <- rbind(settwo, setone)
    }
    
    mn <- mn + 500
    mx <- mx + 500
    }  
  }
  
  assign(gsub(" ","",paste(names[i], "_diffmatch")),settwo)  
  rm(x,y,a, setone, setwo)
  #rm(z)
}

#These are the keeping objects
namesContoursprovinces <- gsub("worms", "worms_diffmatch", names)
namesContoursprovinces[25] <- "emodc_mkd_diffmatch"
namesContoursprovinces[26] <- "nexpd_mkd_diffmatch"

##End of the script.
