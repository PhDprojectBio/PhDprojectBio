#Interpolating contours "_extDepths"
#And #############
#Splitting in 500m depth intervals

rm(i,x,a,y0,mn,mx,y)
for (i in 1:length(names)){
  
  #I. Split records that do not have recorded depth from those that have recorded depth 
  
  y0 <- get(names[i])
  
  nodepth_mkd <- y0 %>% filter(is.na(depth))
  
  nodepth_mkd$XCoord <- nodepth_mkd$decimalLongitude
  nodepth_mkd$YCoord <- nodepth_mkd$decimalLatitude
  depth_mkd <- y0 %>% filter(!is.na(depth)) #anti_join(dbs_mkd_taxa, nodepth_mkd) #records with depth (excluding the ones with no depth)
  depth_mkd$XCoord <- depth_mkd$decimalLongitude
  depth_mkd$YCoord <- depth_mkd$decimalLatitude
  
  if(nrow(nodepth_mkd) > 0){
    
    #II. Retrieving depths for records that do not have depth  
    
    mn <- 0
    mx <- 500
    
    while (mn < 6000){
      
      x <- st_read(as.character(gsub(" ","",paste("contour",mn,"_",mx,".shp"))))
      
      if(i == 26){ #For 1876_99 only. Records with no recorded coordinates need to be excluded in this step.
        nodepth_mkd_noNA <- nodepth_mkd %>% filter(!is.na(nodepth_mkd$XCoord) | !is.na(nodepth_mkd$YCoord))
        nodepth_mkd_NA <- nodepth_mkd %>% filter(is.na(nodepth_mkd$XCoord) | is.na(nodepth_mkd$YCoord))
        #nodepth_mkd_NA$geometry <- NA 
        y <- st_as_sf(x = nodepth_mkd_noNA,      #For all except 1876_99: nodepth_mkd                   
                      coords = c("XCoord", "YCoord"),
                      crs = 4326)
      }
      
      if(i != 26){
        y <- st_as_sf(x = nodepth_mkd,      #For all except 1876_99: nodepth_mkd                   
                      coords = c("XCoord", "YCoord"),
                      crs = 4326)
      }
      
      y_int <- st_intersects(y,x)
      y_log <- lengths(y_int) > 0 
      mkd <- y[y_log, ]
      
      mkd$XCoord <- st_coordinates(mkd$geometry)[,1]
      mkd$YCoord <- st_coordinates(mkd$geometry)[,2]
      
      mkd <- as.data.frame(mkd)
      
      if(i == 26){
        mkd <- rbind(mkd, nodepth_mkd_NA)
        names_nodepth_mkd_NA <- names(nodepth_mkd_NA)
        mkd <- mkd[, names_nodepth_mkd_NA]
      }
      
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)), mkd)
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_compare")), mkd)
      
      if (mn == 0){
        mkd_allcont <- mkd
      }
      
      if (mn > 0){
        mkd_allcont <- rbind(mkd_allcont,mkd)
      }
      
      mn <- mn + 500
      mx <- mx + 500
    }
    
    #get the set that probably correspond to the polygon and graphically represent the result to confirm it and join to the corresponding depth (0to500)
    if(i != 26){
      polygon <- anti_join(nodepth_mkd,mkd_allcont)
    }
    
    #For 1876_99 only
    if(i == 26){
      polygon <- anti_join(nodepth_mkd_noNA,mkd_allcont)
    }
    
    mkd_0_500 <- rbind(get(gsub(" ","",paste(names[i],"_mkd_0_500"))), polygon)
    assign(gsub(" ","",paste(names[i],"_mkd_0_500")), mkd_0_500)
    
    #Assigning depths accordingly to the contours
    
    rm(x,y)
    
    mn <- 0
    mx <- 500
    
    while (mn < 6000){
      
      adddepth <- get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)))
      
      if (nrow(adddepth) > 0){
        adddepth$depth <- mn+1
        adddepth$depthAccuracy <- 0.999999   #To identify records with missing depthAccuracy
        assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_adddepth")),adddepth)
      }
      
      #Creating a new nodepth records with new established depths
      
      if (mn == 0){
        nodepth_mkd_new <- adddepth
      }
      
      if (mn > 0){
        nodepth_mkd_new <- rbind(nodepth_mkd_new,adddepth)
      }
      
      mn <- mn + 500
      mx <- mx + 500
    }
    
    #III. Joining record with retrieved depths with those that had depths recorded already.
    
    dbs_mkd_taxa_new <- rbind(depth_mkd,nodepth_mkd_new)
    assign(gsub(" ","",paste(names[i],"_extDepths")),nodepth_mkd_new)
    assign(gsub(" ","",paste(names[i],"_extDepthsbind")),dbs_mkd_taxa_new)
    
    ###End of the script
    
  }
}

save.image("//home.ansatt.ntnu.no/lcgarcia/Documents/R/1876-2024_timeSeries.RData")

rm(x,y,i)
for(i in 1:length(names)){
  mn <- 0
  mx <- 500
  
  while (mn < 6000){
    
    adddepth <- get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)))
    
    if (nrow(adddepth) == 0){
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_adddepth")),adddepth)
    }
    
    mn <- mn + 500
    mx <- mx + 500
  }
}

#These are the keeping objects and the labels for the years
namesContours <- gsub("worms", "worms_extDepthsbind", names)
namesContours[25] <- "emodc_mkd_extDepthsbind"
namesContours[26] <- "nexpd_mkd_extDepthsbind"
yearsLabels <- c("1876-1899", "1900-1949", "1950-1959", "1960-1969", "1970-1979", "1980-1989", "1990-1999", "2000-2004", "2005-2009", "2010-2014", "2015-2019", "2020-2023")



#III. Assigning new fields 

library("ggplot2")
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("ggspatial")


#Interpolating contours "_extDepths"
#And #############
#Splitting in 500m depth intervals

rm(i,x,a,y0,mn,mx,y)
for (i in 1:length(names)){
  
  #I. Split records that do not have recorded depth from those that have recorded depth 
  
  y0 <- get(names[i])
  
  nodepth_mkd <- y0 %>% filter(is.na(depth))
  
  nodepth_mkd$XCoord <- nodepth_mkd$decimalLongitude
  nodepth_mkd$YCoord <- nodepth_mkd$decimalLatitude
  depth_mkd <- y0 %>% filter(!is.na(depth)) #anti_join(dbs_mkd_taxa, nodepth_mkd) #records with depth (excluding the ones with no depth)
  depth_mkd$XCoord <- depth_mkd$decimalLongitude
  depth_mkd$YCoord <- depth_mkd$decimalLatitude
  
  if(nrow(nodepth_mkd) > 0){
    
    #II. Retrieving depths for records that do not have depth  
    
    mn <- 0
    mx <- 500
    
    while (mn < 6000){
      
      x <- st_read(as.character(gsub(" ","",paste("contour",mn,"_",mx,".shp"))))
      
      if(i == 26){ #For 1876_99 only. Records with no recorded coordinates need to be excluded in this step.
        nodepth_mkd_noNA <- nodepth_mkd %>% filter(!is.na(nodepth_mkd$XCoord) | !is.na(nodepth_mkd$YCoord))
        nodepth_mkd_NA <- nodepth_mkd %>% filter(is.na(nodepth_mkd$XCoord) | is.na(nodepth_mkd$YCoord))
        #nodepth_mkd_NA$geometry <- NA 
        y <- st_as_sf(x = nodepth_mkd_noNA,      #For all except 1876_99: nodepth_mkd                   
                      coords = c("XCoord", "YCoord"),
                      crs = 4326)
      }
      
      if(i != 26){
        y <- st_as_sf(x = nodepth_mkd,      #For all except 1876_99: nodepth_mkd                   
                      coords = c("XCoord", "YCoord"),
                      crs = 4326)
      }
      
      y_int <- st_intersects(y,x)
      y_log <- lengths(y_int) > 0 
      mkd <- y[y_log, ]
      
      mkd$XCoord <- st_coordinates(mkd$geometry)[,1]
      mkd$YCoord <- st_coordinates(mkd$geometry)[,2]
      
      mkd <- as.data.frame(mkd)
      
      if(i == 26){
        mkd <- rbind(mkd, nodepth_mkd_NA)
        names_nodepth_mkd_NA <- names(nodepth_mkd_NA)
        mkd <- mkd[, names_nodepth_mkd_NA]
      }
      
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)), mkd)
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_compare")), mkd)
      
      if (mn == 0){
        mkd_allcont <- mkd
      }
      
      if (mn > 0){
        mkd_allcont <- rbind(mkd_allcont,mkd)
      }
      
      mn <- mn + 500
      mx <- mx + 500
    }
    
    #get the set that probably correspond to the polygon and graphically represent the result to confirm it and join to the corresponding depth (0to500)
    if(i != 26){
      polygon <- anti_join(nodepth_mkd,mkd_allcont)
    }
    
    #For 1876_99 only
    if(i == 26){
      polygon <- anti_join(nodepth_mkd_noNA,mkd_allcont)
    }
    
    mkd_0_500 <- rbind(get(gsub(" ","",paste(names[i],"_mkd_0_500"))), polygon)
    assign(gsub(" ","",paste(names[i],"_mkd_0_500")), mkd_0_500)
    
    #Assigning depths accordingly to the contours
    
    rm(x,y)
    
    mn <- 0
    mx <- 500
    
    while (mn < 6000){
      
      adddepth <- get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)))
      
      if (nrow(adddepth) > 0){
        adddepth$depth <- mn+1
        adddepth$depthAccuracy <- 0.999999   #To identify records with missing depthAccuracy
        assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_adddepth")),adddepth)
      }
      
      #Creating a new nodepth records with new established depths
      
      if (mn == 0){
        nodepth_mkd_new <- adddepth
      }
      
      if (mn > 0){
        nodepth_mkd_new <- rbind(nodepth_mkd_new,adddepth)
      }
      
      mn <- mn + 500
      mx <- mx + 500
    }
    
    #III. Joining record with retrieved depths with those that had depths recorded already.
    
    dbs_mkd_taxa_new <- rbind(depth_mkd,nodepth_mkd_new)
    assign(gsub(" ","",paste(names[i],"_extDepths")),nodepth_mkd_new)
    assign(gsub(" ","",paste(names[i],"_extDepthsbind")),dbs_mkd_taxa_new)
    
    ###End of the script
    
  }
}

save.image("//home.ansatt.ntnu.no/lcgarcia/Documents/R/1876-2024_timeSeries.RData")

rm(x,y,i)
for(i in 1:length(names)){
  mn <- 0
  mx <- 500
  
  while (mn < 6000){
    
    adddepth <- get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)))
    
    if (nrow(adddepth) == 0){
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_adddepth")),adddepth)
    }
    
    mn <- mn + 500
    mx <- mx + 500
  }
}

#These are the keeping objects and the labels for the years
namesContours <- gsub("worms", "worms_extDepthsbind", names)
namesContours[25] <- "emodc_mkd_extDepthsbind"
namesContours[26] <- "nexpd_mkd_extDepthsbind"
yearsLabels <- c("1876-1899", "1900-1949", "1950-1959", "1960-1969", "1970-1979", "1980-1989", "1990-1999", "2000-2004", "2005-2009", "2010-2014", "2015-2019", "2020-2023")










#######

names <- ls()
names <- names[c(28:39,55:66,11,48)]  #adjust accordingly to your environment. It must contain all masked downloads.
names

#############!Normalize names
sort(names(gbifa_1876to99_mkd_worms))
sort(names(obisb_1876to99_mkd_worms))
sort(names(emodc_mkd))
sort(names(nexpd_mkd))


#Assigning "database" fields

rm(i,x)
for(i in 1:length(names)){
  x <- get(names[i])
  
  if (i >= 1 & i <=12){
    setnames(x, "datasetKey", "dataset")
    setnames(x, "gbifID", "id")
    setnames(x, "issue", "flags")
    x$database <- "gbif"
    x$id = as.character(x$id)
    x$dateIdentified = as.character(x$dateIdentified)
  }
  
  if (i >= 13 & i <=24){
    setnames(x, "datasetName", "dataset")
    setnames(x, "eventID", "depthAccuracy")
    x$depthAccuracy <- 0.999999
    x$database <- "obis"
  }
  
  if (i == 25){
    x$database <- "emodnet"
  }
  
  if (i == 26){
    x$database <- "NNAexp86-88"
  }
  
  x$year = as.numeric(x$year)
  x$month = as.numeric(x$month)
  x$day = as.numeric(x$day)
  x$coordinateUncertaintyInMeters = as.numeric(x$coordinateUncertaintyInMeters)
  x$individualCount = as.numeric(x$individualCount)
  
  x$scientificName = str_extract(string = x$scientificName, pattern = "[a-zA-Z]{1,25}\\s{1}[a-z]{2,25}")
  
  assign(names[i], x)
} 


library("ggplot2")
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("ggspatial")


#Interpolating contours "_extDepths"
#And #############
#Splitting in 500m depth intervals

rm(i,x,a,y0,mn,mx,y)
for (i in 1:length(names)){
  
  #I. Split records that do not have recorded depth from those that have recorded depth 
  
  y0 <- get(names[i])
  
  nodepth_mkd <- y0 %>% filter(is.na(depth))
  
  nodepth_mkd$XCoord <- nodepth_mkd$decimalLongitude
  nodepth_mkd$YCoord <- nodepth_mkd$decimalLatitude
  depth_mkd <- y0 %>% filter(!is.na(depth)) #anti_join(dbs_mkd_taxa, nodepth_mkd) #records with depth (excluding the ones with no depth)
  depth_mkd$XCoord <- depth_mkd$decimalLongitude
  depth_mkd$YCoord <- depth_mkd$decimalLatitude
  
  if(nrow(nodepth_mkd) > 0){
  
  #II. Retrieving depths for records that do not have depth 
  
  mn <- 0
  mx <- 500
  
  while (mn < 6000){
    
    x <- st_read(as.character(gsub(" ","",paste("contour",mn,"_",mx,".shp"))))
    
    if(i == 26){ #For 1876_99 only. Records with no recorded coordinates need to be excluded in this step.
      nodepth_mkd_noNA <- nodepth_mkd %>% filter(!is.na(nodepth_mkd$XCoord) | !is.na(nodepth_mkd$YCoord))
      nodepth_mkd_NA <- nodepth_mkd %>% filter(is.na(nodepth_mkd$XCoord) | is.na(nodepth_mkd$YCoord))
      #nodepth_mkd_NA$geometry <- NA 
      y <- st_as_sf(x = nodepth_mkd_noNA,      #For all except 1876_99: nodepth_mkd                   
                    coords = c("XCoord", "YCoord"),
                    crs = 4326)
    }
    
    if(i != 26){
      y <- st_as_sf(x = nodepth_mkd,      #For all except 1876_99: nodepth_mkd                   
                    coords = c("XCoord", "YCoord"),
                    crs = 4326)
    }
    
    y_int <- st_intersects(y,x)
    y_log <- lengths(y_int) > 0 
    mkd <- y[y_log, ]
    
    mkd$XCoord <- st_coordinates(mkd$geometry)[,1]
    mkd$YCoord <- st_coordinates(mkd$geometry)[,2]
    
    mkd <- as.data.frame(mkd)
    
    if(i == 26){
      mkd <- rbind(mkd, nodepth_mkd_NA)
      names_nodepth_mkd_NA <- names(nodepth_mkd_NA)
      mkd <- mkd[, names_nodepth_mkd_NA]
    }
    
    assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)), mkd)
    assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_compare")), mkd)
    
    if (mn == 0){
      mkd_allcont <- mkd
    }
    
    if (mn > 0){
      mkd_allcont <- rbind(mkd_allcont,mkd)
    }
    
    mn <- mn + 500
    mx <- mx + 500
  }
  
  #get the set that probably correspond to the polygon and graphically represent the result to confirm it and join to the corresponding depth (0to500)
  if(i != 26){
    polygon <- anti_join(nodepth_mkd,mkd_allcont)
  }
  
  #For 1876_99 only
  if(i == 26){
    polygon <- anti_join(nodepth_mkd_noNA,mkd_allcont)
  }
  
  mkd_0_500 <- rbind(get(gsub(" ","",paste(names[i],"_mkd_0_500"))), polygon)
  assign(gsub(" ","",paste(names[i],"_mkd_0_500")), mkd_0_500)
  
  #Assigning depths accordingly to the contours
  
  rm(x,y)
  
  mn <- 0
  mx <- 500
  
  while (mn < 6000){
    
    adddepth <- get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)))
    
    if (nrow(adddepth) > 0){
      adddepth$depth <- mn+1
      adddepth$depthAccuracy <- 0.999999   #To identify records with missing depthAccuracy
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_adddepth")),adddepth)
    }
    
    #Creating a new nodepth records with new established depths
    
    if (mn == 0){
      nodepth_mkd_new <- adddepth
    }
    
    if (mn > 0){
      nodepth_mkd_new <- rbind(nodepth_mkd_new,adddepth)
    }
    
    mn <- mn + 500
    mx <- mx + 500
  }
  
  #III. Joining record with retrieved depths with those that had depths recorded already.
  
  dbs_mkd_taxa_new <- rbind(depth_mkd,nodepth_mkd_new)
  assign(gsub(" ","",paste(names[i],"_extDepths")),nodepth_mkd_new)
  assign(gsub(" ","",paste(names[i],"_extDepthsbind")),dbs_mkd_taxa_new)  
  }
}

rm(x,y,i)
for(i in 1:length(names)){
  mn <- 0
  mx <- 500
  
  while (mn < 6000){
    
    adddepth <- get(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx)))
    
    if (nrow(adddepth) == 0){
      assign(gsub(" ","",paste(names[i],"_mkd_",mn,"_",mx,"_adddepth")),adddepth)
    }
    
    mn <- mn + 500
    mx <- mx + 500
  }
}

#These are the keeping objects and the labels for the years
namesContours <- gsub("worms", "worms_extDepthsbind", names)
namesContours[25] <- "emodc_mkd_extDepthsbind"
namesContours[26] <- "nexpd_mkd_extDepthsbind"
yearsLabels <- c("1876-1899", "1900-1949", "1950-1959", "1960-1969", "1970-1979", "1980-1989", "1990-1999", "2000-2004", "2005-2009", "2010-2014", "2015-2019", "2020-2023")

save.image("//home.ansatt.ntnu.no/lcgarcia/Documents/R/1876-2024_timeSeries.RData")

###End of the script
